@page "/graph"
@using System.Web

@inject HttpClient Http

<PageTitle>Graph</PageTitle>

<h1>Graphs</h1>

<p>List of graphs. You can create new one or update/delete existed. Also graphs can be used in algorithms like Dijkstra.</p>

@if (_graphs is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <NavLink class="nav-link" href=@($"GraphDetail/{HttpUtility.UrlEncode("New graph")}")>
        <span class="bi bi-plus-square-fill-app" aria-hidden="true"></span> Create new graph
    </NavLink>

    <table class="table">
        <thead>
        <tr>
            <th>Name</th>
        </tr>
        </thead>
        <tbody>
            @foreach (var graph in _graphs)
            {
                <tr>
                    <td>
                        <NavLink class="nav-link" href=@($"GraphDetail/{HttpUtility.UrlEncode(graph.Name)}")>
                            @graph.Name
                        </NavLink>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Graph[]? _graphs;

    protected override async Task OnInitializedAsync()
    {
        _graphs = await Http.GetFromJsonAsync<Graph[]>("api/Graph");
    }

    public class Graph
    {
        public string Name { get; set; } = string.Empty;
    }
}